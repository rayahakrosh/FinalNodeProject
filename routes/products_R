const express = require('express');
const router = express.Router();
const multer = require('multer');
const path = require('path');
const fs = require('fs');

let products = {}; 
let nextID = 1;

if(!fs.existsSync('images')){
    fs.mkdirSync('images');
}

const storage = multer.diskStorage({
    destination: (req,file,cb)=>{
        cb(null, 'images/');
    },
    filename: (req,file,cb)=>{
        let id = req.params.id ? req.params.id : nextID;
        let finalFilename = `${id}${path.extname(file.originalname)}`;
        cb(null,finalFilename);
    }
});
const upload = multer({storage: storage});


function validateProduct(req, isPatch = false) {
    const { name, description, price } = req.body;

    if (!name || name.length < 2) { return "השם נדרש וחייב להיות לפחות שתי אותיות"; }

    if (!description || description.length < 10) { return "התיאור נדרש וחייב להיות לפחות 10 תווים."; }
    
    const priceValue = parseFloat(price);
    if (isNaN(priceValue) || priceValue <= 0) { return "המחיר"; }


    if (!isPatch && !req.file) { 
        if (req.method === 'POST' && !req.file) {
            return "יש להעלות תמונה עבור הפרויקט החדש";
        }
    }

    return null; 
}
router.get('/',(req,res)=>{
    res.json(Object.values(products).filter(p => p !== null))
})

router.get('/:id',(req,res)=>{
    let id = Number(req.params.id);
    let product = products[id];
    if(!product){ return res.status(404).json({message:"לא קיים"}) }
    res.json(product);
})

router.post('/',upload.single('myFile'),(req,res)=>{
    const validationError = validateProduct(req);
    
    if (validationError) {
        if (req.file) { fs.unlinkSync(path.join('images', req.file.filename)); } 
        return res.status(400).json({ message: validationError });
    }
    let id = nextID++;
    let product = {
        id, 
        name: req.body.name, 
        description: req.body.description,
        price: parseFloat(req.body.price), 
        myFileName: req.file ? req.file.filename : null, 
    };
    products[id]=product;
    res.json({message:"ok", id: id}) 
})


module.exports = router; 